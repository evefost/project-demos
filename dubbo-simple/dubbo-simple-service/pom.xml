<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>dubbo-simple</artifactId>
        <groupId>com.xie.java</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>dubbo-simple-service</artifactId>
    <properties>
        <main.class>com.alibaba.dubbo.container.Main</main.class>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.xie.java</groupId>
            <artifactId>dubbo-simple-api</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>

        <!--数据库配置-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
        </dependency>


        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
        </dependency>

    </dependencies>

    <build>
        <!--打包结果名称-->
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <!--排除所不打包环境配置-->
                <excludes>
                    <exclude>env/**</exclude>
                </excludes>
            </resource>

            <resource>
                <!--指定打包某个环境变量配置-->
                <directory>src/main/resources/${package.environment}</directory>
                <targetPath>properties</targetPath>
                <filtering>true</filtering>
                <excludes>
                    <exclude>dubbo.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <!--dubbo 启动加载属必，
                 String configPath = ConfigUtils.getProperty("dubbo.spring.config");
                if(configPath == null || configPath.length() == 0) {
                    configPath = "classpath*:META-INF/spring/*.xml";
                    }
                -->
                <directory>src/main/resources/${package.environment}</directory>
                <filtering>true</filtering>
                <includes>
                    <include>dubbo.properties</include>
                </includes>
                <excludes></excludes>
            </resource>

            <resource>
                <directory>src/main/resources/${package.mode}</directory>
                <filtering>true</filtering>
            </resource>

        </resources>
        <!--打包所有相关资源-->
        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <classesDirectory>target/classes/</classesDirectory>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>

                </configuration>
                <executions>
                    <!-- 定义在prepare-package时将classes/com打jar -->
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <!-- 将spring的配置，psoperties等属性文件，不要打包到jar中，而是打包到外层的tar.gz中 -->
                            <includes>
                                <include>com/**</include>
                                <include>mapper/**</include>
                                <include>spring/**</include>
                                <include>applicationContext.xml</include>
                                <include>mybatis-config.xml</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <!-- not append assembly id in release file name -->
                    <appendAssemblyId>false</appendAssemblyId>
                    <finalName>${project.artifactId}</finalName>
                    <descriptors>
                        <descriptor>src/main/assemble/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>

                <configuration>
                    <imageName>evefost/${project.artifactId}</imageName>
                    <skipDockerBuild>false</skipDockerBuild>
                    <!--连接远程docker 创建镜像 ,如果本地有装可以用本地-->
                    <dockerHost>http://172.16.165.145:2376</dockerHost>
                    <dockerDirectory>src/main/docker</dockerDirectory>

                    <!-- 私有仓库配置，需要settings.xml文件配合serverId对应的服务地址 -->
                    <serverId>evefost</serverId>
                    <registryUrl>registry.cn-hangzhou.aliyuncs.com</registryUrl>
                    <!-- <forceTags>true</forceTags> -->
                    <!--install阶段也上传，否则只有deploy阶段上传-->
                    <pushImage>false</pushImage>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${build.finalName}.tar.gz</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>

    </build>


</project>